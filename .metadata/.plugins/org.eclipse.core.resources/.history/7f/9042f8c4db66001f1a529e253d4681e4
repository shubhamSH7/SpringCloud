package com.accounts.user.entity;

import java.util.Collection;
import java.util.Collections;
import java.util.List;

import org.antlr.v4.runtime.misc.NotNull;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;

@Entity
@Table(name = "Accounts")
public class Users implements UserDetails {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue()
	private int id;

	@Column(unique = true,nullable = false)
	private String username;

	@Column(unique = true,nullable = false)
	@JsonIgnore
	private String password;

	@OneToMany(mappedBy = "users")
	@JsonIgnore
	private List<Post> posts;

	public Users(String userName, String password) {
		super();
		this.username = userName;
		this.password = password;
	}

	public Users() {
		super();
	}

	public void setPwd(String password) {
		this.password = password;
	}

	public void setName(String name) {
		this.username = name;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return Collections.singletonList(new SimpleGrantedAuthority("user"));
	}

	@Override
	public String getPassword() {
		return password;
	}

	@Override
	public String getUsername() {
		return username;
	}

}
